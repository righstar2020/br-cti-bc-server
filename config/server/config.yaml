name: "br-cti-Network"
version: "1.0"

channels:
  mychannel:
    orderers:
      - orderer.example.com
    peers:
      peer0.org1.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
    policies:
      queryChannelConfig:
        minResponses: 1
        maxTargets: 1
        retryOpts:
          attempts: 10
          initialBackoff: 1s
          maxBackoff: 10s
          backoffFactor: 1.5
          
organizations:
  Org1:
    mspid: Org1MSP
    users:
      Admin:
        key:
          path: ./config/server/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/priv_sk
        cert:
          path: ./config/server/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem
    peers:
      - peer0.org1.example.com

  Org2:
    mspid: Org2MSP
    cryptoPath: ./config/server/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
    peers:
      - peer0.org2.example.com
    certificateAuthorities:
      - ca.org2.example.com

  ordererorg:
    mspID: OrdererMSP
    cryptoPath: ./config/server/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp

peers:
  peer0.org1.example.com:
    url: grpcs://192.168.27.129:7051
    grpcOptions:
      ssl-target-name-override: peer0.org1.example.com
      keep-alive-time: 10s
      keep-alive-timeout: 20s
      keep-alive-permit: true
      fail-fast: false
      allow-insecure: true
    tlsCACerts:
      path: ./config/server/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

  peer0.org2.example.com:
    url: grpcs://192.168.27.129:9051
    grpcOptions:
      ssl-target-name-override: peer0.org2.example.com
      keep-alive-time: 10s
      keep-alive-timeout: 20s
      keep-alive-permit: true
      fail-fast: false
      allow-insecure: true
    tlsCACerts:
      path: ./config/server/organizations/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem

orderers:
  orderer.example.com:
    url: grpcs://192.168.27.129:7050
    grpcOptions:
      ssl-target-name-override: orderer.example.com
      keep-alive-time: 10s
      keep-alive-timeout: 20s
      keep-alive-permit: true
      fail-fast: false
      allow-insecure: true
    tlsCACerts:
      path: ./config/server/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem

#下面一定要配置，不然无法找到节点入口         
entityMatchers:
  peer:
    # the below matcher will allow dynamic discovery to use the anchor peer (peer0.org1.example.com)
    # as a template for all org1 discovered peers config
    - pattern: peer0.org1.example.com
      urlsubstitutionexp: grpcs://192.168.27.129:7051
      ssltargetoverrideurlsubstitutionexp: peer0.org1.example.com
      mappedhost: peer0.org1.example.com

    - pattern: peer0.org2.example.com
      urlsubstitutionexp: grpcs://192.168.27.129:9051
      ssltargetoverrideurlsubstitutionexp: peer0.org2.example.com
      mappedhost: peer0.org2.example.com

  orderer:
    - pattern: orderer.example.com
      urlsubstitutionexp: grpcs://192.168.27.129:7050
      ssltargetoverrideurlsubstitutionexp: orderer.example.com
      mappedhost: orderer.example.com




